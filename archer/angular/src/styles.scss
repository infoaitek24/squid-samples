/* You can add global styles to this file, and also import other style files */
@import 'material-theme';
@import 'colors';
@import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@300;400;600;700;800;900&display=swap');

html,
body {
  height: 100%;
}

body {
  font-family: 'Nunito Sans', sans-serif;;
  margin: 0;
  padding: 0;
  font-feature-settings: 'zero' 1;
  --mdc-dialog-supporting-text-font: 'Nunito Sans', sans-serif;
  background-color: $bg1;
  color: $text1;
  width: 100%;
  height: 100%;
  transition: background 200ms, color 200ms;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

*:focus {
  outline: none;
}

p {
  padding: 0;
  margin: 0;
}

.ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.container {
  max-width: 800px;
  width: 100%;
  margin: 0 auto;

  @include customBreakpointCss('max-width: 800px') {
    max-width: 800px;
    padding: 0 24px;
  }
}

a {
  text-decoration: none;
  color: $text1;

  &:hover {
    text-decoration: underline;
  }
}

.gain {
  color: $gain1 !important;
}

.gain_bg {
  background: $gain2 !important;
}

.lose {
  color: $lose1 !important;
}

.lose_bg {
  background: $lose2 !important;
}


.data1 {
  background-color: $data1;
}

.data2 {
  background-color: $data2;
}

.data3 {
  background-color: $data3;
}

.data4 {
  background-color: $data4;
}

.data5 {
  background-color: $data5;
}

.data6 {
  background-color: $data6;
}

.data7 {
  background-color: $data7;
}

.data8 {
  background-color: $data8;
}

.data9 {
  background-color: $data9;
}

.data10 {
  background-color: $data10;
}

.data11 {
  background-color: $data11;
}

.data12 {
  background-color: $data12;
}

.data13 {
  background-color: $data13;
}

.data14 {
  background-color: $data14;
}

.data15 {
  background-color: $data15;
}

.data16 {
  background-color: $data16;
}

.data17 {
  background-color: $data17;
}

.data18 {
  background-color: $data18;
}

.clear {
  clear: both;
}

.dark,
.light {
  .mat-mdc-unelevated-button.mat-mdc-button-base {
    height: var(--mdc-filled-button-container-height, 36px) !important;
  }

  .mat-mdc-outlined-button.mat-mdc-button-base {
    height: var(--mdc-outlined-button-container-height, 36px) !important;
  }

  .mat-mdc-button-base {
    letter-spacing: unset;
  }
}

.medium_button,
.m_button {
  white-space: nowrap;
  --mdc-filled-button-container-height: 28px !important;
  --mdc-filled-button-container-shape: 8px !important;
  --mdc-outlined-button-container-height: 28px !important;
  --mdc-outlined-button-container-shape: 8px !important;
  --mdc-typography-button-font-weight: 600 !important;
  --mdc-typography-button-font-size: 12px !important;
  font-weight: 600;
  font-size: 12px;

  &.mdc-button {
    padding: 0 16px;
  }
}

.large_button,
.l_button {
  &.mdc-button {
    white-space: nowrap;
    --mdc-filled-button-container-height: 40px !important;
    --mdc-filled-button-container-shape: 10px !important;
    --mdc-outlined-button-container-height: 40px !important;
    --mdc-outlined-button-container-shape: 10px !important;
    --mdc-typography-button-font-weight: 600 !important;
    --mdc-typography-button-font-size: 14px !important;
    font-weight: 600;
    font-size: 14px;

    padding: 0 24px;
  }
}

.extra_large_button,
.xl_button {
  white-space: nowrap;
  --mdc-filled-button-container-height: 48px !important;
  --mdc-filled-button-container-shape: 12px !important;
  --mdc-outlined-button-container-height: 48px !important;
  --mdc-outlined-button-container-shape: 12px !important;
  --mdc-typography-button-font-weight: 600 !important;
  --mdc-typography-button-font-size: 16px !important;
  font-weight: 600;
  font-size: 16px;

  &.mdc-button {
    padding: 0 32px;
  }
}

.primary_button {
  &.mat-mdc-unelevated-button {
    &:not(:disabled) {
      /** Flat buttons **/
      --mdc-filled-button-container-color: var(--bg5);
      --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.87);

      &:hover {
        --mdc-filled-button-container-color: var(--bg6);
      }

      &:active {
        --mdc-filled-button-container-color: var(--bg7);
      }
    }
  }
}

.secondary_button {
  &.mat-mdc-unelevated-button {
    &:not(:disabled) {
      /** Flat buttons **/
      --mdc-filled-button-container-color: var(--primary2);
      --mdc-filled-button-label-text-color: var(--primary1);

      &:hover {
        --mdc-filled-button-container-color: var(--primary4);
      }
    }
  }
}

.outline_button {
  &.mdc-button {
    background: $bg4;
  }

  &.mat-mdc-outlined-button {
    &.mat-mdc-button-base {
      height: auto;
    }

    &:not(:disabled) {
      /** Outlined buttons **/
      --mdc-outlined-button-label-text-color: var(--bg5);
      --mdc-outlined-button-outline-color: var(--bg5);
      --mat-mdc-button-persistent-ripple-color: var(--bg5);
    }
  }
}

.warning_button {
  &.mat-mdc-unelevated-button {
    &:not(:disabled) {
      /** Flat buttons **/
      --mdc-filled-button-container-color: var(--fail1);
      --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.87);

      &:hover {
        --mdc-filled-button-container-color: var(--fail1);
        opacity: 0.8;
      }
    }
  }

  &.mat-mdc-outlined-button {
    &:not(:disabled) {
      /** Outlined buttons **/
      --mdc-outlined-button-label-text-color: var(--fail1);
      --mdc-outlined-button-outline-color: var(--fail1);
      --mat-mdc-button-persistent-ripple-color: var(--fail1);
    }
  }
}

.cdk-overlay-pane {
  .mat-mdc-dialog-content {
    max-height: 92vh;
  }

  .mat-mdc-dialog-container {
    .mat-mdc-dialog-surface {
      background-color: $bg4;
      border-radius: 12px;
      box-shadow: $elevation4;

      .mdc-dialog__content {
        padding: 40px;
        letter-spacing: 0;
      }

      .dialog_buttons {
        display: flex;
        flex-direction: column;
        gap: 12px;

        button {
          width: 100%;
        }
      }
    }
  }
}

// Remove arrows from 'number' input types
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  display: none;
}

.light, .dark {
  .mat-mdc-snack-bar-container {
    --mdc-snackbar-container-color: var(--bg5);

    .mdc-snackbar__surface {
      min-width: auto;
      padding-left: 24px;
      padding-right: 24px;
      --mdc-snackbar-container-shape: 8px;
    }

    .mat-mdc-snack-bar-actions {
      margin-left: 12px;
    }

    .mdc-snackbar__label {
      padding-left: 0;
      padding-right: 0;
      --mdc-snackbar-supporting-text-size: 14px;
      --mdc-snackbar-supporting-text-weight: 700;
      --mdc-snackbar-supporting-text-line-height: 100%
    }
  }
}

/**
  Global material menu styles
 */
.cdk-overlay-pane {
  .mdc-tooltip {
    --mdc-plain-tooltip-container-color: var(--line1);
    box-shadow: $elevation2;
    border-radius: 4px;

    .mdc-tooltip__surface {
      padding: 16px;
      max-width: 385px;
      font-weight: 400;
      font-size: 14px;
      line-height: 20px;
      border-radius: 8px;
    }
  }

  .mat-mdc-menu-panel {
    background: $bg1;
    box-shadow: $elevation2;
    border-radius: 4px;
    margin-top: 8px;

    &.mat-mdc-menu-panel {
      min-width: 108px;
    }

    .mat-mdc-menu-content {
      padding: 4px 0;

      .mat-mdc-menu-item {
        --mdc-typography-body1-font-size: 14px;
        --mdc-typography-body1-line-height: 20px;
        --mdc-typography-body1-font-weight: 400;

        height: 36px;
        min-height: 0;
        display: flex;
        align-items: center;
        color: $text1;
        box-sizing: border-box;
        width: 100%;
        padding: 10px 16px;
        background: transparent;
        border: none;
        margin: 0;
        font-size: var(--mdc-typography-body1-font-size);

        .mat-icon {
          margin-right: 8px;
        }

        // Needed because angular makes icons appear on left
        &.with_icon_on_right {
          flex-direction: row-reverse;

          .mat-icon {
            margin-right: 0;
          }
        }

        &:hover {
          background: $bg3;
        }
      }
    }
  }
}
