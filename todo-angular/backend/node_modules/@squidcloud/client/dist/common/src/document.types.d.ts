import { IntegrationId } from './communication.types';
export type FieldName<T = any> = string & keyof T;
export type PrimitiveFieldType = string | number | boolean | null;
export type FieldType = PrimitiveFieldType | Array<FieldType> | {
    [key: string]: FieldType;
};
export type DocId = string;
export type DocIdObj = Record<FieldName, any>;
export type CollectionName = string;
export type DocTimestamp = number;
export interface SquidDocIdObj {
    collectionName: CollectionName;
    docId: DocId;
    integrationId: IntegrationId;
}
export interface BeforeAndAfterDocs<T = SquidDocument> {
    before: T | undefined;
    after: T | undefined;
}
export type SquidDocId = string;
export interface SquidDocument {
    __docId__: DocId;
    __ts__: DocTimestamp;
    [fieldName: string]: FieldType | undefined;
}
export type DocumentData = Record<FieldName, any | undefined>;
export declare function parseSquidDocId(squidDocId: SquidDocId): SquidDocIdObj;
export declare function getSquidDocId(squidDocIdObj: SquidDocIdObj): SquidDocId;
export declare function getSquidDocId(docId: DocId, collectionName: CollectionName, integrationId: IntegrationId): SquidDocId;
/**
 * Determines whether a beforeDoc and an afterDoc have the same properties.
 * Our internal properties such as __docId__ and __ts__ are excluded from the
 * comparison, as well as any primary keys changes.
 */
export declare function hasDocumentDiff(beforeDoc: SquidDocument | undefined, afterDoc: SquidDocument | undefined): boolean;
