import { StateLeafNode } from './action.applier';
export declare enum ActionType {
    DELETE_PATH = "DELETE_PATH",
    SET_PATH = "SET_PATH",
    BATCH_ACTION = "BATCH_ACTION"
}
export declare interface BaseAction {
    type: ActionType;
}
export declare interface PathAction extends BaseAction {
    path: string[];
}
export type DeletePathAction = PathAction;
export declare interface SetPathAction extends PathAction {
    payload?: StateLeafNode;
}
export declare interface BatchAction extends BaseAction {
    payload: BaseAction[];
}
export declare interface StateMessage {
    type: 'ACTIONS';
    payload: BaseAction[];
}
export declare function isPathAction(action: BaseAction): action is PathAction;
export declare function isSetPathAction(action: BaseAction): action is SetPathAction;
export declare function isDeletePathAction(action: BaseAction): action is DeletePathAction;
export declare function isBatchAction(action: BaseAction): action is BatchAction;
export declare function extractAllPathActions(action: BaseAction): PathAction[];
export declare function getSingleAction(actions: BaseAction[]): BaseAction;
