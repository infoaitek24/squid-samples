import { DocId, DocIdObj, DocumentData, IdResolutionMap, IntegrationId } from '@squidcloud/common';
import { DocumentReference } from './document-reference';
import { DocumentReferenceFactory } from './document-reference.factory';
import { JoinQueryBuilder, JoinQueryBuilderFactory } from './query/join-query-builder.factory';
import { QueryBuilder, QueryBuilderFactory } from './query/query-builder.factory';
import { Alias } from './query/query.types';
export declare class CollectionReference<T extends DocumentData> {
    private readonly collectionName;
    private integrationId;
    private readonly documentReferenceFactory;
    private readonly queryBuilderFactory;
    private readonly joinQueryBuilderFactory;
    private readonly documents;
    constructor(collectionName: string, integrationId: IntegrationId, documentReferenceFactory: DocumentReferenceFactory, queryBuilderFactory: QueryBuilderFactory, joinQueryBuilderFactory: JoinQueryBuilderFactory);
    doc(docId?: DocId | DocIdObj): DocumentReference<T>;
    query(): QueryBuilder<T>;
    joinQuery<A extends Alias>(alias: A): JoinQueryBuilder<T, A, Record<A, DocumentReference<T>>>;
    migrateDocIds(idResolutionMap: IdResolutionMap): void;
}
