"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const serialization_1 = require("./serialization");
describe('Serialization tests', () => {
    test('serializes number', () => {
        expect((0, serialization_1.normalizeJsonAsString)(1983)).toBe('1983');
    });
    test('serializes string', () => {
        expect((0, serialization_1.normalizeJsonAsString)("Colin whose last name I've forgotten")).toBe('"Colin whose last name I\'ve forgotten"');
    });
    test('serializes object', () => {
        expect((0, serialization_1.normalizeJsonAsString)({ a: 1 })).toBe('{"a":1}');
    });
    test('alphabetizes field names', () => {
        expect((0, serialization_1.normalizeJsonAsString)({ a: 1, b: 2 })).toBe('{"a":1,"b":2}');
        expect((0, serialization_1.normalizeJsonAsString)({ b: 1, a: 2 })).toBe('{"a":2,"b":1}');
    });
    test('serializes date', () => {
        const date = new Date();
        const actual = (0, serialization_1.deserializeObj)((0, serialization_1.normalizeJsonAsString)({ a: date })).a;
        expect(actual).toEqual(date);
    });
    const complexObject = {
        array: [1, 2, 3],
        subObject: {
            a: 1,
            b: 2,
        },
    };
    test('serializes object with array and object fields', () => {
        expect((0, serialization_1.normalizeJsonAsString)(complexObject)).toBe(JSON.stringify(complexObject));
    });
    test('roundtrips object with array and object fields', () => {
        expect((0, serialization_1.deserializeObj)((0, serialization_1.normalizeJsonAsString)(complexObject))).toStrictEqual(complexObject);
    });
});
//# sourceMappingURL=serialization.spec.js.map