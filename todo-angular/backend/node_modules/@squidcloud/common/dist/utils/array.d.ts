export declare function binarySearch<T>(arr: T[], key: T, comparator?: (a: T, b: T) => number, low?: number, high?: number): number;
export declare function insertSorted<T>(arr: T[], key: T, comparator?: (a: T, b: T) => number): void;
export declare function removeSorted<T>(arr: T[], key: T, comparator?: (a: T, b: T) => number): void;
export interface Grouped<T> {
    [key: string]: T[];
}
export declare function asyncGroupBy<T>(arr: T[], groupNamer: (element: T) => Promise<string>): Promise<Grouped<T>>;
export declare const arrayMergeCustomizer: (a: any, b: any) => Array<any> | undefined;
