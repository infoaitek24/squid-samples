"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.squidSupportedClouds = exports.convertFromSquidRegion = exports.convertToSquidRegion = exports.squidSupportedCloudMap = exports.squidSupportedRegionMap = exports.supportedSquidRegions = void 0;
exports.supportedSquidRegions = ['us-east-1.aws', 'local'];
exports.squidSupportedRegionMap = {
    'us-east-1.aws': { id: 'us-east-1', name: 'US East (N. Virginia)' },
    local: { id: 'local', name: 'Local' },
};
exports.squidSupportedCloudMap = {
    aws: {
        id: 'aws',
        name: 'Amazon Web Services',
        icon: 'aws_icon',
        regions: [exports.squidSupportedRegionMap['us-east-1.aws']],
    },
    gcp: {
        id: 'gcp',
        name: 'Google Cloud Platform',
        icon: 'gcp_icon',
        tooltip: 'Google Cloud (GCP) support is coming soon!',
        regions: [],
    },
    azure: {
        id: 'azure',
        name: 'Microsoft Azure',
        icon: 'azure_icon',
        tooltip: 'Microsoft Azure support is coming soon!',
        regions: [],
    },
};
function convertToSquidRegion(cloudId, region, isDev = false) {
    if (region === 'local')
        return 'local';
    return `${region}.${cloudId}${isDev ? '-dev' : ''}`;
}
exports.convertToSquidRegion = convertToSquidRegion;
function convertFromSquidRegion(regionAndCloud) {
    if (regionAndCloud === 'local')
        return { cloudId: 'aws', region: 'local' };
    const splitRegion = regionAndCloud.split('.');
    return { cloudId: splitRegion[1], region: splitRegion[0] };
}
exports.convertFromSquidRegion = convertFromSquidRegion;
exports.squidSupportedClouds = Object.values(exports.squidSupportedCloudMap);
//# sourceMappingURL=regions.js.map