import { ActionMethodDecorator, ActionType, ApiEndpointId, CollectionName, CronExpression, CronExpressionString, ExecutableAction, IntegrationId, QueryName, SchedulerAction, SchedulerId, SecureApiAction, SecureDatabaseAction, SecureGraphQLAction, SecureNamedQueryAction, TransformDatabaseAction, TriggerAction, TriggerId, WebhookAction, WebhookId } from '@squidcloud/common';
export declare function secureDatabase<T extends ActionType>(type: T, integrationId?: IntegrationId): ActionMethodDecorator<SecureDatabaseAction<T>>;
export declare function secureCollection<T extends ActionType>(collectionName: CollectionName, type: T, integrationId?: IntegrationId): ActionMethodDecorator<SecureDatabaseAction<T>>;
export declare function secureApi<T extends SecureApiAction>(integrationId: IntegrationId, endpointId?: ApiEndpointId): ActionMethodDecorator<SecureApiAction>;
export declare function secureGraphQL<T extends SecureGraphQLAction>(integrationId: IntegrationId): ActionMethodDecorator<SecureGraphQLAction>;
export declare function transformCollection<T extends ActionType>(collectionName: CollectionName, type: T, integrationId?: IntegrationId): ActionMethodDecorator<TransformDatabaseAction<T>>;
export declare function executable(): ActionMethodDecorator<ExecutableAction>;
export declare function trigger(id: TriggerId, collectionName: CollectionName, integrationId?: IntegrationId): ActionMethodDecorator<TriggerAction>;
export declare function scheduler(id: SchedulerId, cronExpression: CronExpression | CronExpressionString): ActionMethodDecorator<SchedulerAction>;
export declare function webhook(id: WebhookId): ActionMethodDecorator<WebhookAction>;
export declare function namedQuery(integrationId: string, name: string): any;
export declare function secureNamedQuery<T extends SecureNamedQueryAction>(integrationId: IntegrationId, queryName: QueryName): ActionMethodDecorator<SecureNamedQueryAction>;
